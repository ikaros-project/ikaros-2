<?xml version="1.0"?>

<group name="Student" 
	BodySerialDevice= "/dev/ttyBODY"
	HeadSerialDevice= "/dev/ttyHEAD"
	LeftArmSerialDevice= "/dev/ttyLEFT_ARM"
	RightArmSerialDevice= "/dev/ttyRIGHT_ARM"
	PupilSerialDevice= "/dev/cu.usbserial-A501EKIZ"

	BodyDynamixel = "Dynamixel"
	HeadDynamixel = "Dynamixel"
	LeftArmDynamixel = "Dynamixel"
	RightArmDynamixel = "DynamixelSimulate"
	PupilDynamixel = "DynamixelSimulate"

    servosIndexBody = "0"
    servosIndexHead = "1"
    servosIndexLeftArm = "5"
    servosIndexRightArm = "11"
    servosIndexPupil = "17"

    nrServosBody = "1"
    nrServosHead = "4"
    nrServosLeftArm = "6"
    nrServosRightArm = "6"
    nrServosPupil = "2"
    nrServosTotal = "19"

>


<!-- Add modules here 


-->
<module
    class="Average"
    name="filter"
    alpha="0.15"
    type="EMA">
  </module>
    <connection  source = "filter.OUTPUT"  	     target = "MotionGuard.INPUT" />
    <connection  source = "MimicHead.ANGLES" target = "filter.INPUT"/>

  <module
    class = "InputFile"
    name = "TrainData"
    filename = "./data.txt"
    send_end_of_file="no">
      <column name = "MEAN_ANGLE" />
      <column name = "VARIANCE_ANGLE" />
      <column name = "MOVEMENT_ANGLE" />
  </module>

  <module
      class = "Kinect"
      name = "Kinect"
      mode = "raw"
   />

   <module
       class = "DepthHistogram"
       name = "DepthHistogram"
       filter = "yes"
   />

  <module
      class	= "Constant"
      name 	= "Tilt"
      data  = "0.6"
      outputsize = "1"
  />

  <module
      class 			= "Constant"
      name 			    = "Color"
      data              = "0.4"
      outputsize        = "1"
  />

  <module
      class = "Scale"
      name = "Scale"
      factor = "2048"
      comment = "This module could be removed if Image-object allowed scaling."
  />

  <module
       class = "HeadTracking"
       name = "HeadTracking"
       mask_left = "0.2"
       mask_right = "0.8"
       head_limit= "120"
   />

  <module
    class = "MimicHead"
    name = "MimicHead"
    max_movements = "55"
    baysian_threshold = "0.15"
    outlier_limit_angle = "30"
    outlier_limit_rotation ="39"
    limit_rotation = "8"
    limit_angle = "8"
    rotation_factor="2"
    angle_factor="3">
  </module>

  <!--LOAD TRAINING DATA -->
  <connection  source = "TrainData.MOVEMENT_ANGLE"  target = "MimicHead.MOVEMENT" />
  <connection  source = "TrainData.MEAN_ANGLE"  target = "MimicHead.MEAN" />
  <connection  source = "TrainData.VARIANCE_ANGLE"  target = "MimicHead.VARIANCE" />

  <!--Save Depth in raw images -->
  <connection  source = "Tilt.OUTPUT"  target = "Kinect.TILT" />
  <connection  source = "Color.OUTPUT"  target = "Kinect.LED" />

  <!-- Scale Kinect data -->
  <connection  source = "Kinect.DEPTH"  target = "Scale.INPUT" />

  <!-- Display DepthSegmentation -->
  <connection  source = "Scale.OUTPUT"  target = "DepthHistogram.INPUT" />
  <connection  source = "DepthHistogram.OBJECT"  target = "HeadTracking.OBJECT" />

  <connection  source = "Scale.OUTPUT"  target = "HeadTracking.INPUT" />

  <connection  source = "HeadTracking.HEAD_ANGLE"  target = "MimicHead.HEAD_ANGLE_IN" />
  <connection  source = "HeadTracking.HEAD_ROTATION"  target = "MimicHead.HEAD_ROTATION_IN" />
  
<view name="Depth">

	<image
		height = "512"
		name = "Blob"
		format = "green"
		width = "512"
		source = "HeadTracking.OUTPUT"
		class = "image"
		x = "0"
		y = "0"
		title = "Image"
		scale = "both"
		scales = "no"
		max_x = "1"
		max_y = "1"
		flipXAxis = "no"
		flipYAxis = "no"
		flipXCanvas = "no"
		flipYCanvas = "no"
	/>

	<plot
		decimals = "1"
		source = "MimicHead.HEAD_ANGLE"
		title = "MimicHead"
		class = "plot"
		x = "20"
		color = "red, green, green, green, green, blue, blue, blue, blue, blue, blue, yellow, yellow, yellow, yellow, yellow, yellow, pink, pink"
		y = "640"
		width = "421"
		height = "141"
		colorize = "true"
		show_title = "true"
		show_frame = "true"
	/>

	<plot
		decimals = "1"
		source = "MimicHead.HEAD_ROTATION"
		title = "MimicHead"
		class = "plot"
		x = "20"
		color = "red, green, green, green, green, blue, blue, blue, blue, blue, blue, yellow, yellow, yellow, yellow, yellow, yellow, pink, pink"
		y = "520"
		width = "421"
		height = "121"
		colorize = "true"
		show_title = "true"
		show_frame = "true"
	/>

</view>






















    <module class = "Constant" name = "GOAL_POSITION" 		data = "0 	0 0 0 0  	           0 0 15 0 0 0 0 	      0 0 0 0 0 0 0     0.5 0.5" />
	    <_connection  source = "GOAL_POSITION.OUTPUT"  	 target = "MotionGuard.INPUT" sourceoffset = "0" targetoffset = "0" size = "1"/>
	    <_connection  source = "GOAL_POSITION.OUTPUT"  	 target = "MotionGuard.INPUT" sourceoffset = "5" targetoffset = "5" size = "14"/>
        <!-- Crashes ikaros way? -->






    <module
        class = "LinearSplines"
        name = "DegreesTomm"
        points = "
            0	16.33	0	16.22;
            10	14.59	10	14.96;
            20	12.7	20	12.94;
            30	11.09	30	11.12;
            40	9.6	    40	9.6;
            50	8.35	50	8.33;
            60	7.15	60	7.05;
            70	5.73	70	5.87;
            80	4.84	80	4.88"
    />     
    
   <module class = "Sink" name = "NotAvailable" />

    <module class = "Constant" name = "SERVO_SPEED" 		data = "0.5 	    0.5 0.5 0.5 0.5  	           0.5 0.5 0.5 0.5 0.5 0.5 	      0.5 0.5 0.5 0.5 0.5 0.5     0.5 0.5" />
    <module class = "Constant" name = "SERVO_TORQUE_LIMIT"	data = " 0.5	    0.3  0.3  0.3  0.3 	           0.2  0.2  0.2  0.2  0.2  0.2 	      0.5  0.5  0.5  0.5  0.5  0.5	 0.5  0.5" />
    <module class = "Constant" name = "SERVO_TORQUE_ENABLE" data = "   1  	    1    1    1    1   	        1   1    1    1    1   0    1    1    1    1    1   0      0    0" />

        <connection  source = "SERVO_SPEED.OUTPUT" sourceoffset = "@servosIndexBody"	    size = "@nrServosBody"       target = "Body.MOVING_SPEED"  delay = "1"/>
        <connection  source = "SERVO_SPEED.OUTPUT" sourceoffset = "@servosIndexHead"  	size = "@nrServosHead"       target = "Head.MOVING_SPEED"  delay = "1"/>
        <connection  source = "SERVO_SPEED.OUTPUT" sourceoffset = "@servosIndexLeftArm"	size = "@nrServosLeftArm"    target = "LeftArm.MOVING_SPEED"  delay = "1"/>
        <connection  source = "SERVO_SPEED.OUTPUT" sourceoffset = "@servosIndexRightArm"	size = "@nrServosRightArm"   target = "RightArm.MOVING_SPEED"  delay = "1"/>
        <connection  source = "SERVO_SPEED.OUTPUT" sourceoffset = "@servosIndexPupil"	    size = "@nrServosPupil"      target = "Pupil.MOVING_SPEED"  delay = "1"/>
    
        <connection  source = "SERVO_TORQUE_LIMIT.OUTPUT" sourceoffset = "@servosIndexBody"	    size = "@nrServosBody"       target = "Body.TORQUE_LIMIT"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_LIMIT.OUTPUT" sourceoffset = "@servosIndexHead"  	size = "@nrServosHead"       target = "Head.TORQUE_LIMIT"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_LIMIT.OUTPUT" sourceoffset = "@servosIndexLeftArm"	size = "@nrServosLeftArm"    target = "LeftArm.TORQUE_LIMIT"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_LIMIT.OUTPUT" sourceoffset = "@servosIndexRightArm"	size = "@nrServosRightArm"   target = "RightArm.TORQUE_LIMIT"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_LIMIT.OUTPUT" sourceoffset = "@servosIndexPupil"	    size = "@nrServosPupil"      target = "Pupil.TORQUE_LIMIT"  delay = "1"/>

        <connection  source = "SERVO_TORQUE_ENABLE.OUTPUT" sourceoffset = "@servosIndexBody"	    size = "@nrServosBody"       target = "Body.TORQUE_ENABLE"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_ENABLE.OUTPUT" sourceoffset = "@servosIndexHead"  	size = "@nrServosHead"       target = "Head.TORQUE_ENABLE"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_ENABLE.OUTPUT" sourceoffset = "@servosIndexLeftArm"	size = "@nrServosLeftArm"    target = "LeftArm.TORQUE_ENABLE"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_ENABLE.OUTPUT" sourceoffset = "@servosIndexRightArm"	size = "@nrServosRightArm"   target = "RightArm.TORQUE_ENABLE"  delay = "1"/>
        <connection  source = "SERVO_TORQUE_ENABLE.OUTPUT" sourceoffset = "@servosIndexPupil"	size = "@nrServosPupil"      target = "Pupil.TORQUE_ENABLE"  delay = "1"/>

    <!-- Add dynamixel outputs here Temperature Speed. Some of them must be transformed. Speed, force must go through a SC -->


    <!-- General -->
    <module class = "MotionGuard" name = "MotionGuard"  
        max_speed = "100"
        input_limit_min = "-180    -60 -75  -12    -29 -125 -110 -125 -125 -125 -180    -125 -110 -125  -50 -125 -180    -10  -10"
        input_limit_max = "180     65  75   30     11  126  110  126   50  126  180     126  110  126  126  126  180     70   70"
        start_up_time   = "10"
    />
        <connection  source = "SC_FeedBackPosition.OUTPUT"  target = "MotionGuard.REFERENCE" delay = "1"/>



  <module class="ServoConnector" name="SC_Angle"
		connector       = "   1        2    3    4    5      6    7    8    9   10   11     12   13   14   15   16   17      18   19"
        pre_inverted    = "   1        0    0    0    0      0    0    0    0    0    0      0    1    0    0    0    0       0    0" 
        post_inverted   = "   0        0    0    0    0      0    0    0    0    0    0      0    0    0    0    0    0       0    0" 
        offset          = " 170      180  180  180  180    180  180  180  180  225  180    180  180  180  180  135  180     210  210" 
        output_size     = "@nrServosTotal"
	/>
        <connection  source = "MotionGuard.OUTPUT"  target = "SC_Angle.INPUT" delay = "1"/>


    <!-- Split -->
    <connection  source = "SC_Angle.OUTPUT" sourceoffset = "@servosIndexBody"	    size = "@nrServosBody"       target = "Body.GOAL_POSITION"  delay = "1"/>
    <connection  source = "SC_Angle.OUTPUT" sourceoffset = "@servosIndexHead"  	size = "@nrServosHead"       target = "Head.GOAL_POSITION"  delay = "1"/>
    <connection  source = "SC_Angle.OUTPUT" sourceoffset = "@servosIndexLeftArm"	size = "@nrServosLeftArm"    target = "LeftArm.GOAL_POSITION"  delay = "1"/>
    <connection  source = "SC_Angle.OUTPUT" sourceoffset = "@servosIndexRightArm"	size = "@nrServosRightArm"   target = "RightArm.GOAL_POSITION"  delay = "1"/>
    <connection  source = "SC_Angle.OUTPUT" sourceoffset = "@servosIndexPupil"	    size = "@nrServosPupil"      target = "Pupil.GOAL_POSITION"  delay = "1"/>


    <!-- Dynamxiels -->
    <module 
        class           = "@BodyDynamixel" 
        name            = "Body" 
        device          = "@BodySerialDevice" 
        index_mode 		= "indirect"
        print_info 		= "full"
        baud_rate 		= "3000000"
        angle_unit 		= "degrees"
        max_servo_id 	= "3"
        start_up_delay 	= "20"
        servo_id 		= "2"
        strict_servo_id = "no"
        />
    <module 
        class           = "@HeadDynamixel" 
        name            = "Head" 
        device          = "@HeadSerialDevice" 
        index_mode 		= "indirect"
        print_info 		= "minimal"
        baud_rate 		= "1000000"
        angle_unit 		= "degrees"
        max_servo_id 	= "7"
        start_up_delay 	= "20"
        servo_id 		= "2, 3, 4, 5"
        strict_servo_id = "yes"
        />
    <module 
        class           = "@LeftArmDynamixel" 
        name            = "LeftArm" 
        device          = "@LeftArmSerialDevice" 
        index_mode      = "indirect"
        print_info 		= "minimal"
        baud_rate       = "3000000"
        angle_unit      = "degrees"
        max_servo_id    = "9"
        start_up_delay 	= "20"
        servo_id        = "2, 3, 4, 5, 6, 7"
        strict_servo_id = "yes"
        />
  
    <module 
        class           = "@RightArmDynamixel" 
        name            = "RightArm" 
        device          = "@RightArmSerialDevice" 
        index_mode      = "indirect"
        print_info 		= "full"
        baud_rate       = "3000000"
        angle_unit      = "degrees"
        max_servo_id    = "9"
        start_up_delay 	= "20"
        servo_id        = "2, 3, 4, 5, 6, 7"
        strict_servo_id = "yes"
        />
    <module 
        class           = "@PupilDynamixel" 
        name            = "Pupil" 
        device          = "@PupilSerialDevice" 
        index_mode      = "indirect"
        print_info      ="full"
        feedback        ="true"
        baud_rate       = "1000000"
        angle_unit      = "degrees"
        start_up_delay 	= "20"
        max_servo_id    = "4"
        servo_id        = "2, 3"
        strict_servo_id = "yes"
        />

    <!-- Feedback -->
    <module
		class="ServoConnector"
		name="SC_FeedBackPosition"
		connector       = "   1        2    3    4    5        6    7    8    9   10   11     12   13   14   15   16   17      18   19"
        pre_inverted    = "   0        0    0    0    0        0    0    0    0    0    0      0    0    0    0    0    0       0    0" 
        post_inverted   = "   1        0    0    0    0        0    0    0    0    0    0      0    1    0    0    0    0       0    0" 
        offset          = "   -170     -180 -180 -180 -180  -180 -180 -180 -180 -225 -180   -180 -180 -180 -180 -135 -180    -210 -210" 
        output_size     = "@nrServosTotal"
	/>
        <connection  source = "Body.FEEDBACK_PRESENT_POSITION"  target = "SC_FeedBackPosition.INPUT" delay = "1" targetoffset = "@servosIndexBody"	    size = "@nrServosBody" />
        <connection  source = "Head.FEEDBACK_PRESENT_POSITION"  target = "SC_FeedBackPosition.INPUT" delay = "1" targetoffset = "@servosIndexHead"  	    size = "@nrServosHead" />
        <connection  source = "LeftArm.FEEDBACK_PRESENT_POSITION"  target = "SC_FeedBackPosition.INPUT" delay = "1" targetoffset = "@servosIndexLeftArm"	size = "@nrServosLeftArm"/>  
        <connection  source = "RightArm.FEEDBACK_PRESENT_POSITION"  target = "SC_FeedBackPosition.INPUT" delay = "1" targetoffset = "@servosIndexRightArm"	size = "@nrServosRightArm"/>
        <connection  source = "Pupil.FEEDBACK_PRESENT_POSITION"  target = "SC_FeedBackPosition.INPUT" delay = "1" targetoffset = "@servosIndexPupil"	    size = "@nrServosPupil"/> 


    <!-- Dummy module -->
    <!-- Can this be done some other way? -->
    <module class = "Gate" name = "POSITION_FEEDBACK"/>
        <!-- Order is important -->
	    <connection  source = "DegreesTomm.OUTPUT"  	 target = "POSITION_FEEDBACK.INPUT" sourceoffset = "0" targetoffset="@servosIndexPupil" size = "@nrServosPupil"/>
	    <connection  source = "SC_FeedBackPosition.OUTPUT"  	 target = "POSITION_FEEDBACK.INPUT" sourceoffset = "0"	targetoffset="0" size = "@servosIndexPupil"/>
        <!-- Pupil mm to Degrees> -->
	    <connection  source = "SC_FeedBackPosition.OUTPUT"  	 target = "DegreesTomm.INPUT" sourceoffset = "@servosIndexPupil"	targetoffset="0" size = "@nrServosPupil"/>


<view name="Manual Control"   color="red, green, green, green, green, blue, blue, blue, blue, blue, blue, yellow, yellow, yellow, yellow, yellow, yellow, pink, pink">
    <slider-horizontal title="Internal Amplitude" label="Servo Angles" module="GOAL_POSITION" parameter="data" count="20" x="10" y="50" width="150" height="450" show_title = "true" show_value = "true"/>
    <slider-horizontal title="Internal Angles" label="Servo Angles" module="GOAL_POSITION" parameter="data" count="20" x="180" y="50" width="300" height="450" show_title = "true" min = "-180" max ="180" step ="5" labels = "BodyAngle1,NeckTilt,NeckPan,LeftEye,RightEye,LeftArm1,LeftArm2,LeftArm3,LeftArm4,LeftArm5,LeftHand,RightArm1,RightArm2,RightArm3,RightArm4,RightArm5,RightHand,LeftPupil,RightPupil" show_value = "true"/>
	
	<slider-horizontal title="Internal Angles" label="Servo Angles" module="HEAD_POSITION" parameter="data" count="4" x="180" y="50" width="300" height="450" show_title = "true" min = "-180" max ="180" step ="5" labels = "BodyAngle1,NeckTilt,NeckPan,LeftEye,RightEye,LeftArm1,LeftArm2,LeftArm3,LeftArm4,LeftArm5,LeftHand,RightArm1,RightArm2,RightArm3,RightArm4,RightArm5,RightHand,LeftPupil,RightPupil" show_value = "true"/>
	
    <text text="Feedback from servos" x="0" y="500" width="300" height="50"/>
	<table title="Feedback" source="POSITION_FEEDBACK.OUTPUT" x="0" y="550" width="1200" height="300"decimals="1" color="red, green, green, green, green, blue, blue, blue, blue, blue, blue, yellow, yellow, yellow, yellow, yellow, yellow, pink, pink" />

</view>

<!-- LED -->
<module class = "FadeCandy" name = "FadeCandy" start_server = "false">
    <channel name="MOUTH_TOP"       channel="0" size="8" />
    <channel name="MOUTH_BOTTOM"    channel="1" size="8" />
    <channel name="LEFT_EYE"        channel="2" size="12" />
    <channel name="RIGHT_EYE"       channel="3" size="12" />
</module>

    <!-- Eye -->
    <module class = "Constant" name = "LedG" data = "0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3" />
    <module class = "Constant" name = "LedR" data = "0 0 0 0 0 0 0 0 0 0 0 0" />
    <module class = "Constant" name = "LedB" data = "0 0 0 0 0 0 0 0 0 0 0 0" />

    <connection source = "LedR.OUTPUT" target = "FadeCandy.LEFT_EYE_RED" />
    <connection source = "LedG.OUTPUT" target = "FadeCandy.LEFT_EYE_GREEN" />
    <connection source = "LedB.OUTPUT" target = "FadeCandy.LEFT_EYE_BLUE" />
    <connection source = "LedR.OUTPUT" target = "FadeCandy.RIGHT_EYE_RED" />
    <connection source = "LedG.OUTPUT" target = "FadeCandy.RIGHT_EYE_GREEN" />
    <connection source = "LedB.OUTPUT" target = "FadeCandy.RIGHT_EYE_BLUE" />


    <!-- Mouth -->
    <module class = "Constant" name = "MOUTH_BLUE" data = "0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2" />
    <module class = "Constant" name = "MOUTH_GREEN" data = "0 0 0 0 0 0 0 0" />
    <module class = "Constant" name = "MOUTH_RED" data = "0 0 0 0 0 0 0 0" />

    <connection source = "MOUTH_RED.OUTPUT"     target = "FadeCandy.MOUTH_TOP_RED" />
    <connection source = "MOUTH_GREEN.OUTPUT"   target = "FadeCandy.MOUTH_TOP_GREEN" />
    <connection source = "MOUTH_BLUE.OUTPUT"    target = "FadeCandy.MOUTH_TOP_BLUE" />
    <connection source = "MOUTH_RED.OUTPUT"     target = "FadeCandy.MOUTH_BOTTOM_RED" />
    <connection source = "MOUTH_GREEN.OUTPUT"   target = "FadeCandy.MOUTH_BOTTOM_GREEN" />
    <connection source = "MOUTH_BLUE.OUTPUT"    target = "FadeCandy.MOUTH_BOTTOM_BLUE" />

    


</group>

