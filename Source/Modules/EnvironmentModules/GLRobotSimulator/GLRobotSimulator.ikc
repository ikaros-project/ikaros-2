<?xml version="1.0"?>

<class name="GLRobotSimulator" description="simulates a robot">

	<description type="text">
        This module simulates the robot developed within the EU-funded project Goal-Leaders.
        It is intended as a testbed for code that will later be ported to the robot. Only minimal
        functionality is supported, but all inputs and outputs are identical to that for the physical robot.
        There are also additional inputs and outputs that supports an interactive user interface for
        the simulator.
        
        There are no obstacle detector or constraints on movements.
        No physical constrains are checked on object placements.
	</description>

	<example description="A simple example">
		<module
			class="GLRobotSimulator"
			name="GLRobotSimulator"
		/>
	</example>

    <parameter name="locomotion_speed" type="float" default="10" description="Speed of the robot" />
    <parameter name="rotation_speed" type="float" default="0.1" description="Speed of the robot" />
    <parameter name="arm_length" type="float" default="300" description="How far the arm can reach (mm)" />
    <parameter name="charging_station" type="array" size="2" default="1475 225" description="Location of the charging station" />
    <parameter name="view_radius" type="float"  default="300" description="Size of the visual field (mm)" />
    <parameter name="battery_decay" type="float"  default="0.0001" description="Decay of battery charge for each tick when something is done" />
    <parameter name="auto_stack" type="bool"  default="false" description="Automatically place a block on top of another r(ather than inside)" />
    
    <!-- IO FOR THE WORLD MODEL MATRIX -->

	<input name="OBJECTS_IN" description="The object list input" />
	<output name="OBJECTS_OUT" description="The object list output with filled in camera matrices" size_set="OBJECTS_IN" />

    <!-- IO FOR THE USER INTERFACE -->
    
    <input name="MOVE_BLOCK" description="New position and id for object to move (x, y, z, r, id). Input that will immediately move a block with a particular id to the specified location. No constraints are checked. r is currently ignored. This input is used to manipulate the world for example from a user interface." />

	<input name="PICK_OBJECT_SPATIAL_ATTENTION" required="no" description="This input is not available in the physical robot and can currently only be used by the user interface."/>

	<output name="BLOCKS" description="Positions of all blocks in the world: (x, y, z, r, id, color)" size_x="6" size_y="50" />
	<output name="LANDMARKS" description="Positions of all landmark markers in the world (x, y, z, r, id, color)" size_x="6" size_y="50" />
	<output name="CHARGING_STATION" description="Position of the charging station" size_x="2" size_y="1" />
	<output name="VIEW_FIELD" description="Region visible to the camera (circular)" size_x="2" size_y="1" />
    <output name="TARGET" description="The current target location for a pick or place operation. For visualization only." size_x="4" size_y="1" />

    <!-- SIMULATED ROBOT PERCEPTION -->

	<output name="RANGE_MAP" description="Range to objects around the robot. Array of 32 distance measurements around the robot from left to right going all the way around the robot. Elements 15 and 16 point forwards relative to the robot. Distance to closest object is in in mm" size_x="32" size_y="1" />
	<output name="RANGE_COLOR" description="Color of the closest object in the range map. Array of 32 colors corresponding to each measurement in the range map. Colors: 0=background, 1 = gray, 2 = blue, 3 = red, 4 = green" size_x="32" size_y="1" />
	<output name="BLOCKS_IN_VIEW" description="Positions of blocks that are currently seen: (x, y, z, r, id, color), colors: 1=gray, 2=blue; 3=red; 4=green" size_x="6" size_y="50" />

	<output name="ROBOT_LOCATION" description="Positions of robot in the world (x, y, z, r)" size_x="4" size_y="1" />
	<output name="SPEED_OUT" description="Current movement speed of the robot (0-1); same as SPEED input" size_x="1" size_y="1"/>
	<output name="BATTERY_LEVEL" description="Indicates how charged the battery is" size_x="1" size_y="1" />
    
    <!-- ROBOT STATE VARIABLES -->
    
	<output name="LOCOMOTION_PHASE" description="Phase of locomotion (park arm, turn, move, turn, finished). Array of size 5. Single non-zero element indicates the current phase. When locomotion trigger is activated, the stimulated robot will go through the five phases and move to the new location. No physcial constraints are checked. The roboot may pass through obstacles." size_x="5" size_y="1" />
	
    <output name="PICK_PHASE" description="Phase of pick operation (move, down, close, up, finished/holding). Array of size 5. Single non-zero element indicates the current phase. When the robot is instructed to pick an object by sending it the ID of the object to pick (PICK_OBJECT_ID below) and PICK_OBJECT_TRIGGER is activated, it will go through these five phases and pick up the object. This only works if the robot can see and reach an object with the specific ID." size_x="5" size_y="1" />
    
	<output name="PLACE_PHASE" description="Phase of place (move, down, open, up, finished). Array of size 5. Single non-zero element indicates the current phase. When the robot is instructed to place an object by setting location for the object (PLACE_OBJECT_LOCATION below) and activating PLACE_OBJECT_TRIGGER, it will go through these five phases and place the object. This only works if the robot is holding an object and can reach the target location without moving. No physcial constraints are checked. The robot will happily place an object in mid air or inside another object" size_x="5" size_y="1" />
    
	<output name="CHARGE_PHASE" description="Phase of charging (charging, finished). Array of size 2. Single non-zero element indicates the current phase. Phases the robot will go through when CHARGE_BATTERIES is set to 1. This will only work at the charging location" size_x="2" size_y="1" />

    <!-- ERROR SIGNALS -->
    
	<output name="LOCOMOTION_ERROR" description="Can not go to specified location. Set as a result of goal location that cannot be reached. Remains set until new location is given." size_x="1" size_y="1" />
    
	<output name="PICK_ERROR" description="Can not pick object. Set as a result pick input that cannot be performed. Stays on until a new pick operations is tried." size_x="1" size_y="1" />
    
	<output name="PLACE_ERROR" description="Can not place object. Stays on until new command is received." size_x="1" size_y="1" />
    
	<output name="CHARGE_ERROR" description="Can not charge. Set to 1 if the robot attempts to charge when it is not at the charging location." size_x="1" size_y="1" />

    <!-- CONTROL INPUTS FOR THE ROBOT -->

	<input name="GOAL_LOCATION" description="Location to move to (x, y, z, r). Array of size 4. Units: mm and degrees. z should always be 0." />
	<input name="SPEED" description="Movement speed of the robot (0-1)" />
	<input name="LOCOMOTION_TRIGGER" description="Start locomotion" />
	<input name="PICK_OBJECT_ID" description="Id of object to pick" />
	<input name="PICK_OBJECT_TRIGGER" description="Start picking object" />
	<input name="PLACE_OBJECT_LOCATION" description="Where to place the object (x, y, z, r). Array of size 4. Units: mm and degrees." />
	<input name="PLACE_OBJECT_TRIGGER" description="Start placing object" />
	<input name="CHARGE_BATTERIES" description="Start charging" />

	<input name="DIRECT_CONTROL" description="Low level control of locomotion (dx, dy, dz, dr). Array of size 4. Units: mm/tick and degrees/tick. dz should always be 0." />


    <link class="GLRobotSimulator" />

	<author>
		<name>Christian Balkenius</name>
		<email>christian.balkenius@lucs.lu.se</email>
		<affiliation>Lund University Cognitive Science</affiliation>
		<homepage>http://www.lucs.lu.se/Christian.Balkenius</homepage>
	</author>

   <files>
   		<file>GLRobotSimulator</file>
   		<file>GLRobotSimulator</file>
   		<file>GLRobotSimulator</file>
   </files>

</class>